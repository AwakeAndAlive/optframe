%=======================
% OptFrame example file
%=======================

if operator.logic(not system.defined( _definitions_opt ) )   { system.read definitions.opt }

command.exists problem.general bCommandExists

if operator.logic(not $bCommandExists)
{
   command.exists problem.TSP bCommandTSPExists;

   if $bCommandTSPExists 
   {
      command.rename problem.TSP problem.general;
      silent_define default_file ./Examples/TSP/tsplib/berlin52.txt;
   } else
   {
      error no problem.general or problem.TSP exist!;
   }
}

silent_define_list lista1 [3,5,4,1,2]

echo definition(lista1)
list_sort lista1 lista1
echo definition(lista1)

silent_define_list lista2 [[x1, 3, bla, y1],[x2, 5, bla2, y2], [x3, 4, bla3, y3],[x4, 1,bla4, y4],[x5, 2,bla5, y5]]

echo definition(lista2)
list_sort lista2 lista2 2
echo definition(lista2)


command.create print_sizes [ l1 , l2 ]
{
  echo length( $l1 );
  echo $l1;
  echo length( $l2 );
  echo $l2
}

silent_define_list mylist1 [1,2,3,4,5]
silent_define_list mylist2 [7,8,9]

print_list mylist2

print_list_to_file saida.txt mylist2

print_sizes mylist1 mylist2

try 
{

  system.run_parallel
  {
    create_numeric_list 1 1000 l_1_1000;
    for_each $i l_1_1000 {
      echo $i;
    }
  }{
    create_numeric_list 1001 2000 l_1001_2000;
    for_each $i l_1001_2000 {
      echo $i
    }
  }{
    create_numeric_list 2001 3000 l_2001_3000;
    for_each $i l_2001_3000 {
      echo $i
    }
  }
  
} except
{
  system.print No run_parallel module loaded. Continuing...
}

%randgen.set_seed time()
randgen.set_seed 0


problem.general load $default_file

component.check 100 50 false

exit

%system.dictionary %shows an empty dictionary
define my_bestimprovement OptFrame:LocalSearch:BI Evaluator 0 NSSeq 1 %define 'my_bestimprovement' as 'BI ev 0 ns 0'
define random Constructive 0 %define 'random' as 'OptFrame:constructive 0'
%system.dictionary %shows the updated dictionary


undefine bMinimization
component.better_than Evaluator 0 -1000 1000 bMinimization

component.to_string NSSeq 1
echo min: bMinimization

if bMinimization {
   define target_f -100000000;
} else
{
   define target_f  100000000;
}

file.echo out.txt
testls 5 12 target_f target_f Evaluator 0 random my_bestimprovement out.txt sStar

export sStar out.sol

%print sStar
evaluate Evaluator 0 sStar

%echo listing builders
%list_builders OptFrame:

%display the help
%help

problem.general unload


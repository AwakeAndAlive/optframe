% OptFrame .opt definitions file

% -------------------------------------------------------------
% safe inclusion
% -------------------------------------------------------------

if system.defined(_definitions_opt)
{
   echo File definitions.opt already included!;
   error;
}

system.silent_define _definitions_opt true

% -------------------------------------------------------------
% create auxiliar modules and functions
% -------------------------------------------------------------

module.create_raw module.rename [ module_name , new_name ] {
   module.create_raw $new_name [ ] {
      system.preprocess _text_${new_name} $module_name $_all_params_${new_name};
      system.run $module_name $_text_${new_name}; %%% WARNING, CANNOT DO THIS *CORRECTLY* WITHOUT SCOPING =(! TODO
      system.undefine _text_${new_name};
   }
}

module.create_raw function.rename [ function_name , new_function_name ] {
   function.create_raw $new_function_name [ ] = $function_name ( $_all_params_$new_function_name );
}

function.create_raw list.first  [ $list ] = list.element( 1 $list )
function.create_raw list.second [ $list ] = list.element( 2 $list )
function.create_raw list.third  [ $list ] = list.element( 3 $list )
function.create_raw list.last   [ $list ] = list.element( length($list) $list )

% -------------------------------------------------------------
% import prefix of modules
% -------------------------------------------------------------

system.use system
use file -echo           % file.echo conflict with system.echo, renamed to 'echo_to_file'
module.rename file.echo  echo_to_file
use list -silent_define  % list.silent_define conflict with system.silent_define, renamed to 'silent_define_list'
module.rename list.silent_define   silent_define_list
use module
use component
use randgen
use function -create_raw -rename % function.create_raw conflict with module.create_raw (renamed to create_function), function.rename with module.rename (not renamed)
module.rename function.create_raw  create_function

% only functions
use operator
use statistics
use text -definition    % text.definition conflict with list.definition (not renamed) 

use math


%%% DEPRECATED! GIVE SOME OLD NAMES
%module.rename system.define        define
%module.rename system.echo          echo
%module.rename system.silent_define silent_define
%module.rename system.unsafe_define unsafe_define
%module.rename system.undefine      undefine
%module.rename system.pause         pause
%module.rename system.read          read



module.rename list.sort            list_sort
module.rename list.add             list_add
module.rename list.remove          list_remove

module.rename module.create        create_module


module.rename component.create_list       create_list_of_components
%module.rename component.evaluate          evaluate
%module.rename component.exec              exec
%module.rename component.exec_constructive exec_constructive
%module.rename component.export            export
%module.rename component.to_string         to_string
%module.rename component.list_builders     list_builders
module.rename component.list              list_components

module.rename randgen.interval            random_number_interval


% -------------------------------------------------------------
% define smaller names for components
% -------------------------------------------------------------

silent_define Constructive OptFrame:Constructive
silent_define Evaluator    OptFrame:Evaluator
silent_define NS           OptFrame:NS
silent_define NSSeq        OptFrame:NS:NSSeq
silent_define NSEnum       OptFrame:NS:NSSeq:NSEnum


% -------------------------------------------------------------
% create other modules and functions
% -------------------------------------------------------------

module.create print [ component , id ] {
  to_string $component $id optframe_str;
  echo $optframe_str;
  undefine optframe_str;
}

create_module evaluate_to_file [ evaluator , idev , solution , ids , file ] {
  undefine optframe_e;
  evaluate $evaluator $idev $solution $ids optframe_e;
  echo_to_file $file optframe_e;
  undefine optframe_e
}

create_module print_to_file [ component , id , file ] {
  undefine optframe_str;
  system.to_string $component $id optframe_str;
  echo_to_file $file optframe_str;
  undefine optframe_str
} 

% ------------------- lists --------------

create_module print_list [ list ] {
  silent_define_list _ilist $list;
  for_each e _ilist {
     echo $e
  };
  undefine _ilist
} 

create_module print_list_to_file [ file , list ] {
  silent_define_list _ilist $list;
  for_each e _ilist {
     echo_to_file $file $e
  };
  undefine _ilist
}

module.create head [ list , n , new_list ] {
  list.silent_define $new_list [ ];
  create_numeric_list 1 $n _head_indexes;
  for_each i _head_indexes {
     list.push_back $new_list list.element($i $list);
  };
  undefine _head_indexes;
}

module.create tail [ list , n , new_list ] {
  list.silent_define $new_list [ ];
  create_numeric_list operator.compute(operator.compute(list.length($list) - $n) + 1) list.length($list) _tail_indexes;
  for_each i _tail_indexes {
     list.push_back $new_list list.element($i $list);
  };
  undefine _tail_indexes;
} 

% --------------------- CONSTANTS ---------------------- 

list.silent_define list.EMPTY [ ]

% ----------------------- EOF --------------------------


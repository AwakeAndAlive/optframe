%=======================
% OptFrame example file
%=======================

if operator.logic(not system.defined(_definitions_opt)) { system.read definitions.opt }

undefine bCommandExists
command.exists problem.general bCommandExists

if operator.logic(not $bCommandExists)
{
   undefine bCommandTSPExists;
   command.exists problem.TSP bCommandTSPExists;

   if $bCommandTSPExists 
   {
      command.rename problem.TSP problem.general;
      silent_define default_file ./Examples/TSP/tsplib/berlin52.txt;
   } else
   {
      error no problem.general or problem.TSP exist!;
   }
}

%randgen.set_seed time()
randgen.set_seed 0

problem.general load $default_file

define BI  OptFrame:ComponentBuilder:LocalSearch:BI

echo Creating BI for each NSSeq component
create_numeric_list 0 7 all_nsseq
for_each nsseq all_nsseq
{
   build $BI $Evaluator 0  OptFrame:NS:NSSeq $nsseq;
}

echo building VND
define vnd_list [ OptFrame:LocalSearch: 0 ,  OptFrame:LocalSearch: 1, OptFrame:LocalSearch: 2, OptFrame:LocalSearch: 3 ]
component.create_list $vnd_list OptFrame:LocalSearch: comp_vnd_list
build OptFrame:LocalSearch:VND   $Evaluator 0   $comp_vnd_list   vnd

%component.list

echo building ILS
build OptFrame:ComponentBuilder:SingleObjSearch:ILS:ILSLevels   $Evaluator 0    $Constructive 0    $vnd   OptFrame:ILS:LevelPert:LPlus2 0    100    8  meu_ils

test 2 3 7000 7000   $Evaluator 0   $meu_ils   output.txt   solucao_saida

evaluate $Evaluator 0 $solucao_saida

pause

component.list $Constructive lconstructive
component.list $Evaluator levaluator
component.list OptFrame:NS lns
component.list $NSSeq lnsseq
component.list $NSEnum lnsenum

check 10 3 false

build OptFrame:LocalSearch:BI $Evaluator 0 $NSSeq 0 lsBestImp

testls 10 30 0 0 $Evaluator 0 $Constructive 0 $lsBestImp saida-bi.txt bestSol;

testls 1 30 0 0 $Evaluator 0 $bestSol $lsBestImp saida-bi.txt bestSol2;

drop_all
problem.general unload

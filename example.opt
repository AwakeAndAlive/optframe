%=======================
% OptFrame example file
%=======================

read definitions.opt     % load OptFrame system definitions

silent_define_list lista1 [3,5,4,1,2]

echo text(lista1)
list_sort lista1 lista1
echo text(lista1)

silent_define_list lista2 [[x1, 3, bla, y1],[x2, 5, bla2, y2], [x3, 4, bla3, y3],[x4, 1,bla4, y4],[x5, 2,bla5, y5]]

echo text(lista2)
list_sort lista2 lista2 2
echo text(lista2)


create_module print_sizes [ $l1 , $l2 ] [
  echo length( $l1 ),
  echo $l1,
  echo length( $l2 ),
  echo $l2
]

silent_define_list mylist1 [1,2,3,4,5]
silent_define_list mylist2 [7,8,9]

print_list mylist2

print_list_to_file saida.txt mylist2

print_sizes mylist1 mylist2

try [

run_parallel [
  create_numeric_list 1 1000 l_1_1000,
  for_each $i l_1_1000 [
    echo $i
  ]
][
  create_numeric_list 1001 2000 l_1001_2000,
  for_each $i l_1001_2000 [
    echo $i
  ]
][
  create_numeric_list 2001 3000 l_2001_3000,
  for_each $i l_2001_3000 [
    echo $i
  ]
]

] [
  echo No run_parallel module loaded. Continuing...
]

%randgen system_seed time()
randgen system_seed 0


dictionary %shows an empty dictionary
define my_bestimprovement OptFrame:LocalSearch:BI Evaluator 0 NSSeq 0 %define 'my_bestimprovement' as 'BI ev 0 ns 0'
define random Constructive 0 %define 'random' as 'OptFrame:constructive 0'
dictionary %shows the updated dictionary

testls 5 12 8400 8400 Evaluator 0 random my_bestimprovement out.txt sStar

export sStar out.sol

print sStar
evaluate Evaluator 0 sStar

echo listing builders
list_builders OptFrame:

%display the help
%help


read definitions.opt

define numero times(plus(divide(5 2) 10) minus(4 0))

if_else compare( numero == 40 ) [  echo igual! ] [  echo diferente! ] 

exit

randgen system_seed time()
echo

build OptFrame:ComponentBuilder:LocalSearch:BI Evaluator 0 NSEnum 0 meu_bi

exec_constructive Constructive 0 solucao_inicial
print solucao_inicial
evaluate Evaluator 0 solucao_inicial
echo

build OptFrame:ComponentBuilder:CloneConstructive solucao_inicial c_sol_inicial

build OptFrame:ComponentBuilder:SingleObjSearch:SimpleLocalSearch Evaluator 0 c_sol_inicial OptFrame:ComponentBuilder:LocalSearch:Empty constr2
exec 0 60 constr2 sol2
print sol2
evaluate Evaluator 0 sol2
undefine constr2
undefine sol2
echo


build OptFrame:ComponentBuilder:SingleObjSearch:SimpleLocalSearch Evaluator 0 c_sol_inicial meu_bi busca_bi

exec 0 60 busca_bi solucao_final

print solucao_final

evaluate Evaluator 0 solucao_final



create_list_of_components [ meu_bi ] OptFrame:LocalSearch: buscas_locais

echo =======================
echo Componentes disponiveis
echo =======================
list_components OptFrame: componentes
create_numeric_list 1 length( componentes ) li_componentes
for_each $k li_componentes [
  echo element( $k componentes )
]
echo =======================

echo =======================
echo Listas disponiveis
echo =======================
list_components OptFrame:[] lcomponentes
create_numeric_list 1 length( lcomponentes ) li_lcomponentes
for_each $k li_lcomponentes [
  echo element( $k lcomponentes )
]
echo =======================


echo =======================
echo listando builders
echo =======================
list_builders OptFrame: builders
echo builders
create_numeric_list 1 length( builders ) li_builders

define builder_names [ ]
echo definindo builder names: builder_names

for_each $k li_builders [
  silent_define bname   element( 1 element( $k builders ) ),
  silent_define bparams element( 2 element( $k builders ) ),

  echo bname	bparams,
  
  % comentarios em listas devem sempre terminar com virgula,
  
  silent_define builder_names2 append( builder_names [ bname ] ),
  undefine builder_names,
  silent_define builder_names builder_names2,
  undefine builder_names2,
  
  create_numeric_list 1 length( bparams ) li_nparams,
  
  for_each $p li_nparams [
     silent_define tipo element( 1 element( $p bparams ) ),
     
     echo precisa de: tipo,
     
     list_components tipo comps,
     create_numeric_list 1 length( comps ) li_ncomps,
     for_each $z li_ncomps [
       echo serve: element( $z comps )
     ],
     
     undefine comps,
     undefine li_ncomps,
     
     undefine tipo
  ],
  
  echo,

  undefine li_nparams,
  undefine bparams,  
  undefine bname
]
echo LISTA DE BUILDERS: builder_names
echo =======================

echo

echo ===========================================
echo listando builder de OptFrame:ILS:
echo ===========================================

list_builder_of_component OptFrame:ILS:

echo ===========================================

exit

echo Alem do fim
